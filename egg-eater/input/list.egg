type intlist = (Int * intlist)

def link(first, rest):
  (first, rest)
and
def length(l:intlist):
  if l == (nil : intlist): 0
  else:
    1 + length(l[1 of 2])
and
def sum(l):
  if l == (nil : intlist): 0
  else:
  	l[0 of 2] + sum(l[1 of 2])
and
def append(l1, l2):
  if l1 == (nil : intlist): l2
  else:
  	link(l1[0 of 2], append(l1[1 of 2], l2))
and
def reverse(l):
  if l == (nil : intlist): l
  else:
  	append(reverse(l[1 of 2]), link(l[0 of 2], nil : intlist))

let list1 = link(1, link(2, link(3, nil:intlist))) in
  let list2 = link(4, link(5, link(6, nil:intlist)))
  	in reverse(append(list1, list2))

